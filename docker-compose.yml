version: "3.8"

networks:
  backend:
    driver: bridge
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: fastapi-application
    ports:
      - 8000:8000
    volumes:
      - type: bind
        source: ./api
        target: /code

    environment:
      - DEBUG=1
      - WATCHFILES_FORCE_POLLING=true

    restart: always
    networks:
      - backend

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: django-application
    ports:
      - 8001:8001
    volumes:
      - type: bind
        source: ./app
        target: /code
    environment:
      - DEBUG=1
      - WATCHFILES_FORCE_POLLING=true
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@domain.com
      - DJANGO_SUPERUSER_PASSWORD=admin
      - DJANGO_SETTINGS_MODULE=app.settings
    restart: always
    networks:
      - backend
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    container_name: postgres-database
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - type: bind
        source: ./postgres
        target: /var/lib/postgresql/data
    networks:
      - backend
    depends_on:
      - api

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4
    ports:
      - 5050:80 # Expose pgAdmin on port 5050 of the host
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_LISTEN_PORT: 80
    depends_on:
      - postgres # Ensures pgAdmin starts after PostgreSQL
    restart: always
    networks:
      - backend
